#!/bin/bash

# S√©curit√© : stop en cas d'erreur
set -e

# Aller √† la racine de llmfeed-spec et s'assurer qu'on y reste
PROJECT_ROOT="$(cd "$(dirname "$0")" && pwd)"
cd "$PROJECT_ROOT"

echo "=== üöÄ G√©n√©ration de spec.llmfeed.json dans 00_shortcut/ ==="
echo "üìÅ R√©pertoire de travail: $(pwd)"

# Ex√©cuter le script Python depuis la racine du projet
# Ainsi, tous les chemins relatifs dans le script seront corrects
py local-only/scripts/update-spec.llmfeed.json/update_spec_simple.py

# Solution de secours : d√©placer les fichiers si cr√©√©s au mauvais endroit
if [ -f "local-only/scripts/00_shortcut/spec.llmfeed.json" ]; then
    echo "‚ö†Ô∏è  Fichiers trouv√©s dans local-only/scripts/00_shortcut/, d√©placement..."
    mkdir -p 00_shortcut/
    mv local-only/scripts/00_shortcut/* 00_shortcut/ 2>/dev/null || true
    rmdir local-only/scripts/00_shortcut/ 2>/dev/null || true
    echo "‚úÖ Fichiers d√©plac√©s vers 00_shortcut/"
fi

echo "=== ‚úÖ spec.llmfeed.json g√©n√©r√© dans 00_shortcut/ ==="

# V√©rifier que les fichiers ont bien √©t√© cr√©√©s √Ä LA RACINE
if [ -f "$PROJECT_ROOT/00_shortcut/spec.llmfeed.json" ]; then
    echo "‚úÖ spec.llmfeed.json cr√©√© dans $(pwd)/00_shortcut/"
    SPEC_SIZE=$(du -h "$PROJECT_ROOT/00_shortcut/spec.llmfeed.json" | cut -f1)
    echo "üìä Taille: $SPEC_SIZE"
else
    echo "‚ùå ERREUR: spec.llmfeed.json non trouv√© dans $PROJECT_ROOT/00_shortcut/"
    # V√©rifier o√π il a √©t√© cr√©√©
    echo "üîç Recherche des fichiers cr√©√©s..."
    find "$PROJECT_ROOT" -name "spec.llmfeed.json" -type f 2>/dev/null || echo "Aucun spec.llmfeed.json trouv√©"
    exit 1
fi

if [ -f "$PROJECT_ROOT/00_shortcut/spec-essential.llmfeed.json" ]; then
    echo "‚úÖ spec-essential.llmfeed.json cr√©√©"
    LITE_SIZE=$(du -h "$PROJECT_ROOT/00_shortcut/spec-essential.llmfeed.json" | cut -f1)
    echo "üìä Taille: $LITE_SIZE"
else
    echo "‚ö†Ô∏è  spec-essential.llmfeed.json non trouv√© (possiblement d√©sactiv√©)"
fi

# Commit dans llmfeed-spec
echo "=== üì¶ Commit dans llmfeed-spec ==="
git add 00_shortcut/
git add . # Pour capturer d'√©ventuelles autres modifications
git commit -m "Update compiled specs in 00_shortcut/ and markdown content"
git push

echo "=== üöÄ Push de llmfeed-spec termin√© ==="

# Cible : public/exports/spec/
TARGET_EXPORT="../wellknownmcp.org/public/exports/spec"

echo "=== üóëÔ∏è Nettoyage de $TARGET_EXPORT ==="
rm -rf "$TARGET_EXPORT"/*

echo "=== üìÇ Synchronisation vers $TARGET_EXPORT ==="
mkdir -p "$TARGET_EXPORT"

# Utiliser rsync avec --delete pour une synchronisation propre
rsync -av \
    --delete \
    --exclude '.git/' \
    --exclude 'local-only/' \
    --exclude 'update-and-push.sh' \
    --exclude '.gitignore' \
    --exclude '__pycache__/' \
    --exclude '*.pyc' \
    ./ "$TARGET_EXPORT/"

echo "=== ‚úÖ Synchronisation vers $TARGET_EXPORT termin√©e ==="

# Cible : .well-known/exports/
WELLKNOWN_EXPORT="../wellknownmcp.org/public/.well-known/exports"

echo "=== üìÇ Copie des specs vers $WELLKNOWN_EXPORT ==="
mkdir -p "$WELLKNOWN_EXPORT"

# Copier les deux versions de spec
cp 00_shortcut/spec.llmfeed.json "$WELLKNOWN_EXPORT/spec.llmfeed.json"

if [ -f "00_shortcut/spec-essential.llmfeed.json" ]; then
    cp 00_shortcut/spec-essential.llmfeed.json "$WELLKNOWN_EXPORT/spec-essential.llmfeed.json"
fi

echo "=== ‚úÖ Specs copi√©s dans .well-known/exports ==="

# Aller dans wellknownmcp.org et commit + push
cd ../wellknownmcp.org

echo "=== üì¶ Commit dans wellknownmcp.org ==="
git add public/exports/spec
git add public/.well-known/exports/

# Message de commit avec informations de taille
COMMIT_MSG="Update exported spec (00_shortcut structure)"
if [ -n "$SPEC_SIZE" ]; then
    COMMIT_MSG="$COMMIT_MSG - spec: $SPEC_SIZE"
fi
if [ -n "$LITE_SIZE" ]; then
    COMMIT_MSG="$COMMIT_MSG, essential: $LITE_SIZE"
fi

git commit -m "$COMMIT_MSG"
git push

echo "=== üéâ TOUT TERMIN√â ==="
echo ""
echo "üìÅ Structure cr√©√©e:"
echo "  - 00_shortcut/spec.llmfeed.json (complet)"
echo "  - 00_shortcut/spec-essential.llmfeed.json (all√©g√©)"
echo "  - public/exports/spec/ (copie compl√®te)"
echo "  - public/.well-known/exports/ (specs uniquement)"
echo ""
echo "üîó Acc√®s:"
echo "  - Spec compl√®te: https://wellknownmcp.org/.well-known/exports/spec.llmfeed.json"
echo "  - Spec essentielle: https://wellknownmcp.org/.well-known/exports/spec-essential.llmfeed.json"
echo "  - Export complet: https://wellknownmcp.org/exports/spec/"